version: '3'
services:
    nginx:
        image: nginx:latest
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./certbot/conf:/etc/letsencrypt:ro
            - ./certbot/www:/var/www/certbot:ro
        user: root
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        depends_on:
            - api-server
        networks:
            - app_network

    certbot:
        image: certbot/certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    api-server:
        build: .
        env_file:
            - .env.prod
        expose:
            - '3001'
        depends_on:
            - mongodb
            - redis
        networks:
            - app_network
        restart: unless-stopped

    ai-server:
        build:
            context: ../ai_box # AI 서버 코드 위치
            dockerfile: Dockerfile
        env_file:
            - .env.prod
        expose:
            - '3005' # AI 서버 포트
        networks:
            - app_network
        restart: unless-stopped

    mongodb:
        image: mongo:4.4
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${DB_USER_CUSTOM}
            MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD_CUSTOM}
            MONGO_INITDB_DATABASE: ${DB_NAME_CUSTOM}
        #command: mongod --port 37017 --auth
        command: mongod --port 37017 --auth --bind_ip 0.0.0.0 # Connnections open for lambda in VPC
        volumes:
            - mongodb_data:/data/db
        ports:
            - '37017:37017'
        networks:
            - app_network
        restart: unless-stopped

    redis:
        image: redis:alpine
        command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
        volumes:
            - redis_data:/data
        expose:
            - '6379'
        networks:
            - app_network
        restart: unless-stopped

networks:
    app_network:
        driver: bridge

volumes:
    mongodb_data:
    redis_data:
